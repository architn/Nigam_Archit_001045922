/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.BMICalculator;
import controller.BloodPressureCalculator;
import controller.CholesterolCalculator;
import controller.XMLHandler;
import java.awt.Color;
import java.awt.Font;
import javax.swing.JOptionPane;
import model.AppConstants;
import model.PatientInfo;
import model.PatientRecords;
import model.ResidentRecords;
import model.UserProfile;

/**
 *
 * @author architnigam
 */
public class HomePage extends javax.swing.JFrame {

    /**
     * Creates new form Sample
     */
    static UserProfile userProfile;
    AppConstants AppConstants = new AppConstants();
    PatientRecords patientRecords = new PatientRecords();
    ResidentRecords residentRecords = new ResidentRecords();
    XMLHandler xmlHandler = new XMLHandler();
    BMICalculator bmiCalculator;
    BloodPressureCalculator bloodPressureCalculator;
    CholesterolCalculator cholesterolCalculator;
    PatientInfo patientInfo;
    public HomePage(UserProfile userProfile) {
        
        initComponents();
        bmiCalculator = new BMICalculator();
        bloodPressureCalculator = new BloodPressureCalculator();
        cholesterolCalculator = new CholesterolCalculator();
        panelConditionArea.setBackground(Color.WHITE);
        panelWorkArea.setBackground(Color.WHITE);
        this.userProfile = userProfile;
        Font fontOfButton = new Font("Open Sans", Font.BOLD,12);
        btnRegisterPatient.setFont(fontOfButton);
        btnCreatePatient.setFont(fontOfButton);
        btnRecordPatientData.setFont(fontOfButton);
        btnPatientDataAnalysis.setFont(fontOfButton);
        btnModifyPatientRecords.setFont(fontOfButton);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        splitPanel = new javax.swing.JSplitPane();
        panelConditionArea = new javax.swing.JPanel();
        btnRegisterPatient = new javax.swing.JButton();
        btnModifyPatientRecords = new javax.swing.JButton();
        btnRecordPatientData = new javax.swing.JButton();
        btnPatientDataAnalysis = new javax.swing.JButton();
        btnCreatePatient = new javax.swing.JButton();
        panelWorkArea = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnRegisterPatient.setText("Register Patient");
        btnRegisterPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterPatientActionPerformed(evt);
            }
        });

        btnModifyPatientRecords.setText("Modify Patient Records");
        btnModifyPatientRecords.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModifyPatientRecordsActionPerformed(evt);
            }
        });

        btnRecordPatientData.setText("Record Patient Data");
        btnRecordPatientData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRecordPatientDataActionPerformed(evt);
            }
        });

        btnPatientDataAnalysis.setText("Patient Data Analysis");
        btnPatientDataAnalysis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPatientDataAnalysisActionPerformed(evt);
            }
        });

        btnCreatePatient.setText("Create Resident");
        btnCreatePatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreatePatientActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelConditionAreaLayout = new javax.swing.GroupLayout(panelConditionArea);
        panelConditionArea.setLayout(panelConditionAreaLayout);
        panelConditionAreaLayout.setHorizontalGroup(
            panelConditionAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelConditionAreaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnCreatePatient)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(panelConditionAreaLayout.createSequentialGroup()
                .addGroup(panelConditionAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnRegisterPatient)
                    .addComponent(btnModifyPatientRecords)
                    .addComponent(btnRecordPatientData)
                    .addComponent(btnPatientDataAnalysis))
                .addGap(0, 12, Short.MAX_VALUE))
        );
        panelConditionAreaLayout.setVerticalGroup(
            panelConditionAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelConditionAreaLayout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(btnCreatePatient)
                .addGap(29, 29, 29)
                .addComponent(btnRegisterPatient)
                .addGap(44, 44, 44)
                .addComponent(btnModifyPatientRecords)
                .addGap(54, 54, 54)
                .addComponent(btnRecordPatientData)
                .addGap(49, 49, 49)
                .addComponent(btnPatientDataAnalysis)
                .addContainerGap(381, Short.MAX_VALUE))
        );

        splitPanel.setLeftComponent(panelConditionArea);

        javax.swing.GroupLayout panelWorkAreaLayout = new javax.swing.GroupLayout(panelWorkArea);
        panelWorkArea.setLayout(panelWorkAreaLayout);
        panelWorkAreaLayout.setHorizontalGroup(
            panelWorkAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 991, Short.MAX_VALUE)
        );
        panelWorkAreaLayout.setVerticalGroup(
            panelWorkAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 750, Short.MAX_VALUE)
        );

        splitPanel.setRightComponent(panelWorkArea);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(splitPanel)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(splitPanel))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPatientDataAnalysisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPatientDataAnalysisActionPerformed
        // TODO add your handling code here:
        PatientDataAnalysisPanel patientDataAnalysis;
        try{
                patientDataAnalysis = new PatientDataAnalysisPanel(patientRecords, residentRecords);
                int accessLevelOfLoggedInUser = userProfile.getAccessLevel();
                if(accessLevelOfLoggedInUser == 1 || accessLevelOfLoggedInUser == 2
                    || accessLevelOfLoggedInUser == 3)
                {
                    splitPanel.setRightComponent(patientDataAnalysis);
                }
            }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnPatientDataAnalysisActionPerformed

    private void btnRegisterPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterPatientActionPerformed
        // TODO add your handling code here:
        xmlHandler.AutoPopulatePatientXMLRecords();
        RegisterResidentAsPatientPanel registerPatient = new RegisterResidentAsPatientPanel(residentRecords, patientRecords);
        int accessLevelOfLoggedInUser = userProfile.getAccessLevel();
        if(accessLevelOfLoggedInUser == 3)
        {
            splitPanel.setRightComponent(registerPatient);
        }
        else{
            JOptionPane.showMessageDialog(this, AppConstants.ErrorMessageUnauthorizedUserToRegisterPatients);
        }
    }//GEN-LAST:event_btnRegisterPatientActionPerformed

    private void btnRecordPatientDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRecordPatientDataActionPerformed
        // TODO add your handling code here:
        RecordPatientDataPanel recordPatientData =  new RecordPatientDataPanel(patientRecords, residentRecords);
        int accessLevelOfLoggedInUser = userProfile.getAccessLevel();
        if(accessLevelOfLoggedInUser == 2 || accessLevelOfLoggedInUser == 3)
        {
             splitPanel.setRightComponent(recordPatientData); 
        }
         else{
            JOptionPane.showMessageDialog(this, AppConstants.ErrorMessageUnauthorizedUserToRecordPatientData);
        }
    }//GEN-LAST:event_btnRecordPatientDataActionPerformed

    private void btnModifyPatientRecordsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifyPatientRecordsActionPerformed
        // TODO add your handling code here:
        xmlHandler.AutoPopulatePatientXMLRecords();
        ModifyPatientRecordsPanel modifyPatientRecords = new ModifyPatientRecordsPanel(patientRecords);
        int accessLevelOfLoggedInUser = userProfile.getAccessLevel();
        if(accessLevelOfLoggedInUser == 2 || accessLevelOfLoggedInUser == 3)
        {
            splitPanel.setRightComponent(modifyPatientRecords);
        }
         else{
            JOptionPane.showMessageDialog(this, AppConstants.ErrorMessageUnauthorizedUserToModifyPatientData);
        }
    }//GEN-LAST:event_btnModifyPatientRecordsActionPerformed

    private void btnCreatePatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreatePatientActionPerformed
        // TODO add your handling code here:
        CreateResidentPanel createPatient = new CreateResidentPanel(residentRecords,patientRecords,userProfile);
        int accessLevelOfLoggedInUser = userProfile.getAccessLevel();
        if(accessLevelOfLoggedInUser == 1 || accessLevelOfLoggedInUser == 3)
        {
            splitPanel.setRightComponent(createPatient);
        }
         else{
            JOptionPane.showMessageDialog(this, AppConstants.ErrorMessageUnauthorizedUserToModifyPatientData);
        }
    }//GEN-LAST:event_btnCreatePatientActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HomePage(userProfile).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreatePatient;
    private javax.swing.JButton btnModifyPatientRecords;
    private javax.swing.JButton btnPatientDataAnalysis;
    private javax.swing.JButton btnRecordPatientData;
    private javax.swing.JButton btnRegisterPatient;
    private javax.swing.JPanel panelConditionArea;
    private javax.swing.JPanel panelWorkArea;
    private javax.swing.JSplitPane splitPanel;
    // End of variables declaration//GEN-END:variables
}
