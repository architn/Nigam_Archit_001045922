/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.BMICalculator;
import controller.BloodPressureCalculator;
import controller.CholesterolCalculator;
import controller.ValidationLogic;
import controller.XMLHandler;
import java.awt.Color;
import java.awt.Font;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import model.AppConstants;
import model.PatientInfo;
import model.PatientRecords;
import model.ResidentRecords;
/**
 *
 * @author architnigam
 */
public class RecordPatientDataPanel extends javax.swing.JPanel {

    /**
     * Creates new form RecordPatientDataPanel
     */
    AppConstants AppConstants;
    ValidationLogic validationLogic;
    BMICalculator bmiCalculator;
    BloodPressureCalculator bloodPressureCalculator;
    CholesterolCalculator cholesterolCalculator;
    PatientInfo patientInfo;
    PatientRecords patientRecords;
    XMLHandler xmlHandler = new XMLHandler();
    ResidentRecords residentRecords;
    ArrayList<String> registeredMRNList;
    
    public RecordPatientDataPanel(PatientRecords patientRecords, ResidentRecords residentRecords ) {
        initComponents();
        bmiCalculator = new BMICalculator();
        bloodPressureCalculator = new BloodPressureCalculator();
        cholesterolCalculator = new CholesterolCalculator();
        AppConstants = new AppConstants();
        validationLogic = new ValidationLogic();
        patientInfo = new PatientInfo();
        this.patientRecords = patientRecords;
        this.residentRecords = residentRecords;
        
        
        // UI
        setBackground(Color.WHITE);
        Font font = new Font("Helvetica", Font.BOLD,12);
        Font fontOfTitle = new Font("Helvetica", Font.BOLD,15);
        lblMRN.setFont(font);
        lblAge.setFont(font);
        lblGender.setFont(font);
        lblDistrict.setFont(font);
        lblPrimaryProvider.setFont(font);
        lblSystole.setFont(font);
        lblDiastole.setFont(font);
        lblCholesterolReading.setFont(font);
        lblHeight.setFont(font);
        lblWeight.setFont(font);
        lblTitle.setFont(fontOfTitle);
        Font fontOfButton = new Font("Open Sans", Font.BOLD,12);
        btnSaveData.setFont(fontOfButton);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblMRN = new javax.swing.JLabel();
        txtMRN = new javax.swing.JTextField();
        lblPrimaryProvider = new javax.swing.JLabel();
        ddEthinicity = new javax.swing.JComboBox<>();
        lblWeight = new javax.swing.JLabel();
        txtWeight = new javax.swing.JTextField();
        lblPounds = new javax.swing.JLabel();
        lblHeight = new javax.swing.JLabel();
        txtHeight = new javax.swing.JTextField();
        lblInches = new javax.swing.JLabel();
        lblSystole = new javax.swing.JLabel();
        txtSystoleReading = new javax.swing.JTextField();
        lblDiastole = new javax.swing.JLabel();
        txtDiastoleReading = new javax.swing.JTextField();
        lblmmHg1 = new javax.swing.JLabel();
        lblmmHg2 = new javax.swing.JLabel();
        lblCholesterolReading = new javax.swing.JLabel();
        txtCholestrolReading = new javax.swing.JTextField();
        lblmgdL = new javax.swing.JLabel();
        btnSaveData = new javax.swing.JButton();
        lblDistrict = new javax.swing.JLabel();
        ddDistrict = new javax.swing.JComboBox<>();
        lblTitle = new javax.swing.JLabel();
        lblAge = new javax.swing.JLabel();
        txtAge = new javax.swing.JTextField();
        lblGender = new javax.swing.JLabel();
        ddGender = new javax.swing.JComboBox<>();

        lblMRN.setText("Medical Record Number:");

        lblPrimaryProvider.setText("Ethnicity");

        ddEthinicity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "White, non-Hispanic", "Black, non-Hispanic", "Hispanic", "Asian",
            "American Indian or Alaska Native", "Native Hawaiian or Other Pacific Islander"}));
ddEthinicity.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
        ddEthinicityActionPerformed(evt);
    }
    });

    lblWeight.setText("Weight (in pounds):");

    lblPounds.setText("pounds");

    lblHeight.setText("Height (in Inches):");

    lblInches.setText("inches");

    lblSystole.setText("Systole Reading: ");

    lblDiastole.setText("Diastole Reading: ");

    lblmmHg1.setText("mm Hg");

    lblmmHg2.setText("mm Hg");

    lblCholesterolReading.setText("Cholesterol Reading: ");

    lblmgdL.setText("mg/dL");

    btnSaveData.setText("SAVE DATA");
    btnSaveData.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnSaveDataActionPerformed(evt);
        }
    });

    lblDistrict.setText("District: ");

    ddDistrict.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Allston", "Back Bay", "Beacon Hill", "Fenway",
        "North End"}));

lblTitle.setText("VITAL SIGNS ENCOUNTER:");

lblAge.setText("Age: ");

lblGender.setText("Gender: ");

ddGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female", "Other" }));

javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
this.setLayout(layout);
layout.setHorizontalGroup(
layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
.addGroup(layout.createSequentialGroup()
    .addGap(67, 67, 67)
    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addComponent(lblPrimaryProvider)
            .addGap(116, 116, 116)
            .addComponent(ddEthinicity, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addComponent(lblTitle)
        .addGroup(layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(lblMRN)
                .addComponent(lblDistrict)
                .addComponent(lblSystole)
                .addComponent(lblDiastole)
                .addComponent(lblCholesterolReading)
                .addComponent(lblHeight)
                .addComponent(lblWeight)
                .addComponent(lblAge)
                .addComponent(lblGender))
            .addGap(18, 18, 18)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(txtCholestrolReading, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(lblmgdL))
                .addGroup(layout.createSequentialGroup()
                    .addComponent(txtDiastoleReading, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(lblmmHg2))
                .addGroup(layout.createSequentialGroup()
                    .addComponent(txtSystoleReading, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(lblmmHg1))
                .addGroup(layout.createSequentialGroup()
                    .addComponent(txtHeight, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(lblInches))
                .addGroup(layout.createSequentialGroup()
                    .addComponent(txtWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(lblPounds))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtAge, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtMRN, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE))
                .addComponent(ddGender, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(ddDistrict, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(btnSaveData, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))))
    .addContainerGap(360, Short.MAX_VALUE))
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addGap(42, 42, 42)
            .addComponent(lblTitle)
            .addGap(36, 36, 36)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(lblMRN)
                .addComponent(txtMRN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(18, 18, 18)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(lblAge)
                .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(18, 18, 18)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(lblGender)
                .addComponent(ddGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(16, 16, 16)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDistrict)
                    .addComponent(ddDistrict, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblPrimaryProvider)
                        .addComponent(ddEthinicity, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(35, 35, 35)))
            .addGap(20, 20, 20)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(lblWeight)
                .addComponent(txtWeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(lblPounds))
            .addGap(30, 30, 30)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(lblHeight)
                .addComponent(txtHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(lblInches))
            .addGap(35, 35, 35)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(lblSystole)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSystoleReading, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblmmHg1)))
            .addGap(26, 26, 26)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(lblDiastole)
                        .addComponent(txtDiastoleReading, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(20, 20, 20)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(lblCholesterolReading)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCholestrolReading, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblmgdL))))
                .addComponent(lblmmHg2))
            .addGap(26, 26, 26)
            .addComponent(btnSaveData)
            .addContainerGap(36, Short.MAX_VALUE))
    );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveDataActionPerformed
        // TODO add your handling code here:
        String mrn = txtMRN.getText();
        String ageInString = txtAge.getText();
        String weightInString = (txtWeight.getText());
        String heightInString = (txtHeight.getText());
        String totalCholesterolReadingInString = (txtCholestrolReading.getText());
        String systoleInString = (txtSystoleReading.getText());
        String diastoleInString = (txtDiastoleReading.getText());
        String gender = ddGender.getSelectedItem().toString();
        String ethinicity = ddEthinicity.getSelectedItem().toString();
        String district = ddDistrict.getSelectedItem().toString();
        
        if(validationLogic.ValidateIfAllFieldsOnUIAreFilledAndAreNumeric(mrn, ageInString,  weightInString, 
                heightInString, totalCholesterolReadingInString, systoleInString, diastoleInString) 
                && validationLogic.ValidateIfMRNIsARegisteredPatient(patientRecords, mrn)
                && validationLogic.ValidateIfMRNDoesNotHaveAnExistingVitalSign(patientRecords, mrn)
                && validationLogic.ValidateIfPatientIsAbove18YearsOfAge(Integer.parseInt(ageInString)))
        {
            double weight = Double.parseDouble(txtWeight.getText());
            double height = Double.parseDouble(txtHeight.getText());
            double totalCholesterolReading = Double.parseDouble(txtCholestrolReading.getText());
            double systole = Double.parseDouble(txtSystoleReading.getText());
            double diastole = Double.parseDouble(txtDiastoleReading.getText());
            double BMIValue = (bmiCalculator.CalculateBMI(weight, height));
            int age = Integer.parseInt(ageInString);
            
            int BMICriticality = bmiCalculator.DetermineBMICriticalityOfPatient(weight, height);
            String BMICriticalityLevel = bmiCalculator.BMIMapCriticalityLevelToCategory(BMICriticality);
            String BMIMessage = "Patient with MRN '"+mrn+"' BMI value is: '"+BMIValue+"' and the patient's BMI is"
                    + ": "+BMICriticalityLevel; 

            int CholesterolCriticality = cholesterolCalculator.DetermineCholesterolDangerLevelCriticalityOfPatient(totalCholesterolReading);
            String CholesterolCriticalityLevel = cholesterolCalculator.CholesterolMapCriticalityLevelToCategory(CholesterolCriticality);
            String CholesterolMessage = "Patient with MRN '"+mrn+"' cholesterol level is: "+CholesterolCriticalityLevel;

            int BPCriticality = bloodPressureCalculator.DetermineBloodPressureCriticalityOfPatient(systole, diastole);
            String BPCriticalityLevel = bloodPressureCalculator.BPMapCriticalityLevelToCategory(BPCriticality);
            String BPMessage = "Patient with MRN '"+mrn+"' blood pressure level is: "+BPCriticalityLevel;

            String finalMessageOnSave = AppConstants.PatientRecordSuccessfullySavedMessage + "\n \n" +BMIMessage + 
                                        "\n" +BPMessage+ "\n" +CholesterolMessage ; 
            
            patientInfo = patientRecords.addPatientRecord();
            
            patientInfo.setMedicalRecordNumber(mrn);
            patientInfo.setEthinicity(ethinicity);
            patientInfo.setDistrict(district);
            patientInfo.setGender(gender);
            patientInfo.setAge(age);
            patientInfo.setDateOfVisit(new Date());
            patientInfo.setHeightInInches(height);
            patientInfo.setWeightInPounds(weight);
            patientInfo.setSystoleReadingInmmHg(systole);
            patientInfo.setDiastoleReadingInmmHg(diastole);
            patientInfo.setCholestrolReadingInmgDl(totalCholesterolReading);
            patientInfo.setBMI(BMIValue);
            patientInfo.setBMIDangerLevel(BMICriticality);
            patientInfo.setCholestrolDangerLevel(CholesterolCriticality);
            patientInfo.setBloodPressureDangerLevel(BPCriticality);

            JOptionPane.showMessageDialog(this, finalMessageOnSave);
            
            txtMRN.setText("");
            txtHeight.setText("");
            txtWeight.setText("");
            txtSystoleReading.setText("");
            txtDiastoleReading.setText("");
            txtCholestrolReading.setText("");
        }
    }//GEN-LAST:event_btnSaveDataActionPerformed

    private void ddEthinicityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ddEthinicityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ddEthinicityActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSaveData;
    private javax.swing.JComboBox<String> ddDistrict;
    private javax.swing.JComboBox<String> ddEthinicity;
    private javax.swing.JComboBox<String> ddGender;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblCholesterolReading;
    private javax.swing.JLabel lblDiastole;
    private javax.swing.JLabel lblDistrict;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblHeight;
    private javax.swing.JLabel lblInches;
    private javax.swing.JLabel lblMRN;
    private javax.swing.JLabel lblPounds;
    private javax.swing.JLabel lblPrimaryProvider;
    private javax.swing.JLabel lblSystole;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblWeight;
    private javax.swing.JLabel lblmgdL;
    private javax.swing.JLabel lblmmHg1;
    private javax.swing.JLabel lblmmHg2;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtCholestrolReading;
    private javax.swing.JTextField txtDiastoleReading;
    private javax.swing.JTextField txtHeight;
    private javax.swing.JTextField txtMRN;
    private javax.swing.JTextField txtSystoleReading;
    private javax.swing.JTextField txtWeight;
    // End of variables declaration//GEN-END:variables
}
