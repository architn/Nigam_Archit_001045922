/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.CustomerRole;


import Business.DB4OUtil.DB4OUtil;
import Business.DeliveryMan.DeliveryMan;
import Business.EcoSystem;
import Business.Menu.MenuItems;
import Business.Order.Order;
import Business.Order.OrderDirectory;
import Business.Organization;
import Business.Restaurant.Restaurant;
import Business.UserAccount.UserAccount;
import java.awt.Font;
import java.util.ArrayList;
import java.util.Date;
import java.util.Random;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author raunak
 */
public class CustomerAreaJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    Organization organization;
    private UserAccount userAccount;
    EcoSystem system;
    DB4OUtil db4O;
    ArrayList<MenuItems> menuItemsInCart = new ArrayList<MenuItems>();
    Restaurant searchedRestaurant;
    
    Random rand = new Random();
    public CustomerAreaJPanel(JPanel userProcessContainer, UserAccount userAccount, EcoSystem system) {
        initComponents();
        this.setSize(1680, 1050);
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        this.userAccount = userAccount;
        lblName.setText(userAccount.getUsername());
        Font font = new Font("Helvetica", Font.BOLD,12);
        jLabel1.setFont(font);
        jLabel2.setFont(font);
        jLabel3.setFont(font);
        jLabel4.setFont(font);
        
        if(system.getRestaurantDirectory().getRestaurantList().isEmpty())
        {
            btnSearch.setEnabled(false);
            btnAddToCart.setEnabled(false);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMenuItems = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblCart = new javax.swing.JTable();
        btnOrder = new javax.swing.JToggleButton();
        lblCustomerName = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtRestaurantName = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        lblName = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnAddToCart = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtTotalPrice = new javax.swing.JTextField();

        setBackground(new java.awt.Color(255, 255, 255));

        tblMenuItems.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Item Name", "Cost", "Menu"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblMenuItems);

        tblCart.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Menu Item", "Cost"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblCart);

        btnOrder.setText("ORDER");
        btnOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrderActionPerformed(evt);
            }
        });

        jLabel2.setText("Restauarant: ");

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        jLabel3.setText("WELCOME!");

        btnAddToCart.setText("Add to cart");
        btnAddToCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddToCartActionPerformed(evt);
            }
        });

        jLabel4.setText("Total Price:  $");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addGap(552, 552, 552)
                        .addComponent(lblCustomerName, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(txtRestaurantName, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnSearch))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnAddToCart, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 655, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(txtTotalPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 670, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(227, 227, 227)
                        .addComponent(btnOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 272, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtRestaurantName, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnSearch)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblCustomerName, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addComponent(btnAddToCart)
                .addGap(45, 45, 45)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtTotalPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(64, 64, 64)
                .addComponent(btnOrder, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(72, 72, 72))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        String restaurantName = txtRestaurantName.getText();
        try{
            searchedRestaurant = system.getRestaurantDirectory().findRestaurant(restaurantName);
            if(searchedRestaurant == null)
            {
                JOptionPane.showMessageDialog(this, "No such restaurant found!");
                txtRestaurantName.setText("");
            }
            else{
                DefaultTableModel model = (DefaultTableModel) tblMenuItems.getModel();
            model.setRowCount(0);
            for(int index = 0; index < searchedRestaurant.getMenuItems().size(); index++)
            {
                MenuItems menuItems = searchedRestaurant.getMenuItems().get(index);
                if(menuItems.isAvailability() && menuItems.getRestaurant().equals(searchedRestaurant.getName()))
                {
                    Object[] row = new Object[3];
                    row[0] = menuItems.getItemName();
                    row[1] = menuItems.getItemPrice();
                    row[2] = menuItems;
                    model.addRow(row);
                }
            }
            }
        }
        catch(Exception ex){
            
        }
        
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrderActionPerformed
        // TODO add your handling code here:
        double totalOrderAmount = 0;
        MenuItems menuItem = new MenuItems();
        ArrayList<MenuItems> orderedItems = new ArrayList<MenuItems>();
        DefaultTableModel model1 = (DefaultTableModel) tblCart.getModel();
        for(int acrossRow = 0; acrossRow < model1.getRowCount(); acrossRow++)
        {
            menuItem.setItemName(model1.getValueAt(acrossRow, 0).toString());
            double price = Double.parseDouble(model1.getValueAt(acrossRow, 1).toString());
            menuItem.setItemPrice(price);
            totalOrderAmount += price;
        }
        DeliveryMan assignedDeliveryMan = new DeliveryMan();
        int upperbound = system.getDeliveryManDirectory().getDeliveryMan().size();
        if(upperbound != 0)
        {
            int returnedIndex = rand.nextInt(upperbound);
            assignedDeliveryMan = system.getDeliveryManDirectory().getDeliveryMan().get(returnedIndex);
            orderedItems.add(menuItem);
            Order orderedItem = new Order();
            
            // Method 2: Correct
            if(!assignedDeliveryMan.getStatus().equals("Busy") && totalOrderAmount != 0)
            {
                orderedItem = system.getOrderDirectory().createOrder(orderedItems, userAccount.getUsername(), 
                    assignedDeliveryMan, totalOrderAmount, searchedRestaurant);
                assignedDeliveryMan.setStatus("Busy");
                JOptionPane.showMessageDialog(this, "Order successfully placed! Total amount is: $"+totalOrderAmount
                +" and will be delivered by: "+assignedDeliveryMan.getDeliveryManName());
            }
            else{
                JOptionPane.showMessageDialog(this, "All Delivery boys are busy! Try ordering after a while!");
            }
            
        }
        else{
            JOptionPane.showMessageDialog(this, "Order cannot be placed if there is no delivery person in system! "
                    + "Please add one before proceding!");
        }
        txtTotalPrice.setText("");
        btnOrder.setEnabled(false);
    }//GEN-LAST:event_btnOrderActionPerformed

    private void btnAddToCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddToCartActionPerformed
        // TODO add your handling code here:
            int rowCount = tblCart.getRowCount();
            MenuItems menuItem = new MenuItems();
            int selectedIndex = tblMenuItems.getSelectedRow();
            if(selectedIndex < 0)
            {
                JOptionPane.showMessageDialog(this, "Select a row");
            }
            DefaultTableModel model = (DefaultTableModel) tblMenuItems.getModel();
            MenuItems selectedMenuItem = (MenuItems) model.getValueAt(selectedIndex, 2);
            menuItemsInCart.add(selectedMenuItem);
            JOptionPane.showMessageDialog(this, "Added to cart!");
            populateCart(menuItemsInCart);
            double totalOrderAmount = 0;
            DefaultTableModel model1 = (DefaultTableModel) tblCart.getModel();
            for(int acrossRow = 0; acrossRow < model1.getRowCount(); acrossRow++)
            {
                double price = Double.parseDouble(model1.getValueAt(acrossRow, 1).toString());
                totalOrderAmount += price;
            }
            txtTotalPrice.setText(String.valueOf(totalOrderAmount));
    }//GEN-LAST:event_btnAddToCartActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddToCart;
    private javax.swing.JToggleButton btnOrder;
    private javax.swing.JButton btnSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblCustomerName;
    private javax.swing.JLabel lblName;
    private javax.swing.JTable tblCart;
    private javax.swing.JTable tblMenuItems;
    private javax.swing.JTextField txtRestaurantName;
    private javax.swing.JTextField txtTotalPrice;
    // End of variables declaration//GEN-END:variables

    private void populateCart(ArrayList<MenuItems> itemsInCart) {
        DefaultTableModel model1 = (DefaultTableModel) tblCart.getModel();
        model1.setRowCount(0);
        for(int index = 0; index < menuItemsInCart.size(); index++)
        {
            MenuItems menuItem = menuItemsInCart.get(index);
            Object[] row = new Object[2];
            row[0] = menuItem.getItemName();
            row[1] = menuItem.getItemPrice();
            model1.addRow(row);
        }
    }
}
